name: 🚀 Build and Deploy InvoicePe

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/mobile/**'
      - 'packages/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/mobile/**'
      - 'packages/**'

  # Manual trigger for production builds
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - android
          - ios
      profile:
        description: 'Build profile'
        required: true
        default: 'preview'
        type: choice
        options:
          - development
          - preview
          - production

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # Job 1: Code Quality & Testing
  quality-check:
    name: 🔍 Code Quality & Testing
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄️ Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 TypeScript check
        run: |
          cd apps/mobile
          pnpm run type-check

      - name: 🧹 Lint check
        run: |
          cd apps/mobile
          pnpm run lint

      - name: 🏗️ Build check
        run: |
          cd apps/mobile
          npx expo export --platform web

  # Job 2: Android Build
  android-build:
    name: 🤖 Android Build
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'workflow_dispatch' || (github.ref == 'refs/heads/main' && github.event_name == 'push')
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🤖 Build Android
        run: |
          cd apps/mobile
          eas build --platform android --profile ${{ github.event.inputs.profile || 'preview' }} --non-interactive --no-wait

  # Job 3: iOS Build
  ios-build:
    name: 🍎 iOS Build
    runs-on: macos-latest
    needs: quality-check
    if: github.event_name == 'workflow_dispatch' || (github.ref == 'refs/heads/main' && github.event_name == 'push')
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🍎 Build iOS
        run: |
          cd apps/mobile
          eas build --platform ios --profile ${{ github.event.inputs.profile || 'preview' }} --non-interactive --no-wait

  # Job 4: Deployment Notification
  notify-deployment:
    name: 📢 Deployment Notification
    runs-on: ubuntu-latest
    needs: [android-build, ios-build]
    if: always() && (needs.android-build.result == 'success' || needs.ios-build.result == 'success')
    steps:
      - name: 📢 Notify Success
        run: |
          echo "🎉 Build completed successfully!"
          echo "Platform: ${{ github.event.inputs.platform || 'all' }}"
          echo "Profile: ${{ github.event.inputs.profile || 'preview' }}"
          echo "Check EAS dashboard for build status: https://expo.dev/accounts/prasanthkuna/projects/invoicepe/builds"
